@model Domain.ProductRank
  @{
      var group = ViewBag.Group as Domain.ProductRankGroup;
}
<title>ویرایش آیتم امتیازدهی @Model.Name در گروه @group.Title </title>


<div class="x_panel">
    <div class="x_content">

        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Ranks","ProductRankGroups",new {Id=group.Id })"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;" class="box-title">
            ویرایش آیتم امتیازدهی @Model.Name در گروه @group.Title

        </h1>
        <br /><br />
        <p class="text text-danger">@ViewBag.Error</p>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.message != null)
                {
                    <p class="alert alert-danger">@ViewBag.message</p>
                }
                                                @Html.HiddenFor(x => x.LanguageId)
                                                                @Html.HiddenFor(x => x.DisplaySort)
                                                                @Html.Hidden("GroupId",group.Id)
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "مقدار", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="clearfix"></div>
                <div class="form-group col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <input type="submit" value="ویرایش" class="btn btn-success" />
                </div>
            </div>
        }


    </div>
</div>