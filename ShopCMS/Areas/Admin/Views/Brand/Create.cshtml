@model Domain.Brand
    <title>ایجاد برند</title>

    @{
        //var HelpModuleSection = ViewBag.HelpModuleSection as Domain.HelpModuleSection;
        var setting = ViewBag.setting as Domain.Setting;
    }


    <div class="x_panel">
        <div class="x_content">
            <div class="text-left"><a class="btn btn-success" href="@Url.Action("Index")"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>
            @*<span class="btn btn-success" data-html="true" data-toggle="tooltip" data-placement="right" title="@(HelpModuleSection!=null?Html.Raw(HelpModuleSection.Data).ToHtmlString():"راهنمایی وجود ندارد")"></span>*@

            <h1 style="display:inline-block;font-size: 2em;" class="box-title">
                ایجاد برند

            </h1>

            <p class="text text-danger">@ViewBag.Error</p>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">

                @*<label class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></label> @Html.LabelFor(x => x.Name)*@

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "نام انگلیسی", id = "ContentName", @class = "form-control" } })
                <span class="fa fa-bold form-control-feedback right" aria-hidden="true"></span>
                <p><label class="ContentName"></label> کاراکتر باقی مانده.</p>

            </div>
            <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">

                @*<label class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></label> @Html.LabelFor(x => x.Name)*@

                @Html.EditorFor(model => model.PersianName, new { htmlAttributes = new { placeholder = "نام فارسی", id = "ContentName", @class = "form-control" } })

            </div>
            <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">


                @*<label class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></label> @Html.LabelFor(x => x.Title)*@

                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { placeholder = "عنوان", id = "ContentTitle", @class = "form-control" } })
                <span class="fa fa-bold form-control-feedback right" aria-hidden="true"></span>
                <p><label class="ContentTitle"></label> کاراکتر باقی مانده.</p>

            </div>

            <div class="clearfix"></div>

            <div class="form-group has-feedback col-lg-6 col-md-6 col-sm-12 col-xs-12">
                @*<label class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "توضیحات متای گوگل").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "توضیحات متای گوگل").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></label> @Html.LabelFor(x => x.MeteDescription)*@

                @Html.TextAreaFor(model => model.MeteDescription, htmlAttributes: new { placeholder = "توضیحات متای گوگل", id = "ContentDescr", @class = "form-control", rows = "5" })
                <span class="fa fa-bold form-control-feedback right" aria-hidden="true"></span>

                <p><label class="ContentDescr"></label> کاراکتر باقی مانده.</p>

            </div>

            <div class="form-group has-feedback col-lg-3 col-md-3 col-sm-12 col-xs-12">
                @*<span class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "تصویر").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "تصویر").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>*@ @Html.LabelFor(x => x.AttachementId)

                @Ajax.ActionLink("انتخاب یا آپلود تصویر", "OpenAttachement", "FileManager", null, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "createView", OnBegin = "$('.loading').show();", OnSuccess = "$('.loading').hide();createMode('',2)", InsertionMode = InsertionMode.Replace }, htmlAttributes: new { @class = "btn btn-primary OpenFileManager" })

                <div id="createView"></div>

                <div id="AttachementContainer">
                    <img src="~/Content/Default/images/default-thumbnail.jpg" class="img-responsive" width="220" height="120" style="display:inline-block;width:220px;height:120px" />
                    @Html.EditorFor(model => model.AttachementId, new { htmlAttributes = new { @class = "form-control text-left Ltr", @readonly = "readonly" } })
                </div>

            </div>
            <div class="form-group has-feedback col-lg-3 col-md-3 col-sm-12 col-xs-12">
                @*<span class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "تصویر").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "تصویر").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>*@


                <p>
                    @Html.CheckBoxFor(x => x.IsShowHomePage)
                    @Html.LabelFor(x => x.IsShowHomePage)
                </p>

                <hr />

                @Html.LabelFor(x => x.CoverHomePage)
                <br />


                @Ajax.ActionLink("انتخاب یا آپلود تصویر", "OpenAttachement", "FileManager", null, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "createView", OnBegin = "$('.loading').show();", OnSuccess = "$('.loading').hide();createMode('AttachementContainer2',2)", InsertionMode = InsertionMode.Replace }, htmlAttributes: new { @class = "btn btn-primary OpenFileManager" })


                <div id="AttachementContainer2" class="AttachementContainer AttachementContainer2">
                    <img src="~/Content/Default/images/default-thumbnail.jpg" class="img-responsive" width="220" height="120" style="display:inline-block;width:220px;height:120px" />
                    @Html.EditorFor(model => model.CoverHomePage, new { htmlAttributes = new { @class = "form-control text-left Ltr", @readonly = "readonly" } })
                </div>

            </div>

            <div class="clearfix"></div>
            <div class="form-group has-feedback col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div>
                    @Ajax.ActionLink("استفاده از فایل ها", "OpenAttachement", "FileManager", null, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "createView", OnBegin = "$('.loading').show();", OnSuccess = "$('.loading').hide();createMode('',1)", InsertionMode = InsertionMode.Replace }, htmlAttributes: new { @class = "btn btn-primary OpenFileManager", @style = "margin-bottom:0" })
                    @*<label class="glyphicon glyphicon-question-sign " data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "محتوا").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "محتوا").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></label>*@ @Html.LabelFor(x => x.Data, new { style = "display:inline" })
                </div>

                @Html.TextAreaFor(model => model.Data, htmlAttributes: new { Id = "txt_Content", @class = "form-control elm1", rows = "5" })

            </div>



            @{
                CoreLib.ViewModel.Xml.XMLReader readXml = new CoreLib.ViewModel.Xml.XMLReader(setting.StaticContentDomain);
                var languages = readXml.ListOfXLanguage();
            }
            @if (languages.Count == 1)
            {
                @Html.Hidden("LanguageId", languages.First().Id)
            }
            else
            {
                <div class="form-group has-feedback col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.LanguageId, "زبان ( وب سایت )", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            }




            <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <input type="submit" value="ایجاد" class="btn btn-primary" />
            </div>

        </div>
                        }

            @section Scripts{
                <script>
                    $('#ContentTitle').simplyCountable({ counter: '.ContentTitle', maxCount: 100, safeClass: 'safe', overClass: 'over' });
                    $('#ContentDescr').simplyCountable({ counter: '.ContentDescr', maxCount: 150, safeClass: 'safe', overClass: 'over' });
                </script>

                @Scripts.Render("~/bundles/Admin/FileManager/Js")
                <script src="~/Scripts/tinymce/tinymce.min.js"></script><script src="~/Scripts/tinymce/tiny_mce_load.js"></script>

            }
        </div>
    </div>