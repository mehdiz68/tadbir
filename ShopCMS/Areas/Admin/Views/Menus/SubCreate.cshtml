@model Domain.Menu
<title>   ایجاد زیر منو برای : @ViewBag.MenuTitle</title>
@{
    var HelpModuleSection = ViewBag.HelpModuleSection as Domain.HelpModuleSection;
    var setting = ViewBag.setting as Domain.Setting;
}


<div class="x_panel">
    <div class="x_content">
        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Index")"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;" class="box-title">
            <i class="flaticon-menu"></i> ایجاد زیر منو برای :  @ViewBag.MenuTitle
        </h1>
        <br /><br />
        <p class="text text-danger">@ViewBag.Error</p>
        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.Hidden("MenuId", ViewBag.MenuId as string);

                <div class="form-group">
                    <div class="control-label col-md-3">
                        <span class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "عنوان").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>
                        @Html.LabelFor(model => model.Title)
                    </div>
                    <div class="col-md-9">
                        <p><span class="ContentTitle"></span> کاراکتر باقی مانده.</p>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { id = "ContentTitle", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>


                <fieldset class="NewFieldset">
                    <legend class="Newlegend">
                        <span class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "لینک به محتواهای داخل سایت").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "لینک به محتواهای داخل سایت").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>
                        &nbsp;&nbsp; لینک به محتواهای داخل سایت
                    </legend>
                    <div>
                        <div class="form-group">
                            <label class="col-md-3">
                                <label class="col-lg-7 col-md-7 col-sm-7 col-xs-12"><input checked name="select-menu-type" id="Internal-menu-type" type="radio" /> انتخاب </label>
                                <label class="col-lg-5 col-md-5 col-sm-5 col-xs-12">@Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label" })</label>
                                <label class="clearfix"></label>
                            </label>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.TypeId, ViewBag.TypeIdSelectListItem as List<SelectListItem>, "--انتخاب نشده--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="SearchContainer" style="display:none">
                            <label class="control-label col-md-3">
                                جستجو در محتواها

                            </label>
                            <div class="col-md-9">
                                <input type="text" class="form-control" id="SearchContent" placeholder="عنوان را وارد نمایید..." style="display:inline-block;width:40%" />

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LinkId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownList("LinkIdSelectListItem", null, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LinkId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </fieldset><br /><br />
                <fieldset class="NewFieldset">
                    <legend class="Newlegend">
                        <span class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "لینک به خارج از سایت").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "لینک به خارج از سایت").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span> &nbsp;&nbsp; لینک به خارج از سایت
                    </legend>
                    <div class="form-group">
                    </div>
                    <div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <label class="col-lg-6 col-md-6 col-sm-6 col-xs-12"><input name="select-menu-type" id="External-menu-type" type="radio" /> انتخاب </label>
                                <label class="col-lg-6 col-md-6 col-sm-6 col-xs-12">@Html.LabelFor(model => model.OffLink, htmlAttributes: new { @class = "control-label" })</label>
                                <label class="clearfix"></label>
                            </div>
                            <div class="col-md-9">
                                <p><span class="ContentLink"></span> کاراکتر باقی مانده.</p>
                                @Html.EditorFor(model => model.OffLink, new { htmlAttributes = new { id = "ContentLink", @class = "form-control", @disabled = "disabled", style = "direction:ltr;text-align:left" } })
                                @Html.ValidationMessageFor(model => model.OffLink, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </fieldset><br />

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked" })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlaceShow, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.DropDownList("PlaceShow", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PlaceShow, "", new { @class = "text-danger" })
                    </div>
                </div>

                @{
                    CoreLib.ViewModel.Xml.XMLReader readXml = new CoreLib.ViewModel.Xml.XMLReader(setting.StaticContentDomain);
                    var languages = readXml.ListOfXLanguage();
                }
                @if (languages.Count == 1)
                {
                    @Html.Hidden("LanguageId", languages.First().Id)
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.LanguageId, "زبان ( وب سایت )", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-9">
                        <input type="submit" value="ایجاد" class="btn btn-primary" />
                    </div>
                </div>
            </div>
                    }

    </div>
</div>

@section Scripts{
    <script src="~/Areas/Admin/Content/Scripts/View/CreateMenu.js"></script>
    <script>
        $('#ContentTitle').simplyCountable({ counter: '.ContentTitle', maxCount: 100, safeClass: 'safe', overClass: 'over' });
        $('#ContentLink').simplyCountable({ counter: '.ContentLink', maxCount: 255, safeClass: 'safe', overClass: 'over' });

        $('#ContentTitle').simplyCountable({ counter: '.ContentTitle', maxCount: 100, safeClass: 'safe', overClass: 'over' });
        $('#ContentLink').simplyCountable({ counter: '.ContentLink', maxCount: 255, safeClass: 'safe', overClass: 'over' });
        $(document).ready(function () {
            $("#Internal-menu-type").change(function () {
                $("#ContentLink").prop("disabled", true);
                $("#ContentLink").val("");
                $("#TypeId").prop("disabled", false);
                $("#SearchContent").prop("disabled", false);
                $("#LinkIdSelectListItem").prop("disabled", false);

            });
            $("#External-menu-type").change(function () {
                $("#ContentLink").prop("disabled", false);
                $("#TypeId").prop("disabled", true);
                $("#TypeId option:eq(0)").prop('selected', true);
                $("#SearchContent").prop("disabled", true);
                $("#SearchContent").val("");
                $("#LinkIdSelectListItem").prop("disabled", true);
                $("#LinkIdSelectListItem option:eq(0)").prop('selected', true);
                $("#SearchContainer").hide();
            });
        });
    </script>
}