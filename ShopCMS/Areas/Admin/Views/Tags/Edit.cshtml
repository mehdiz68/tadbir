@model Domain.Tag
<title>ویرایش برچسب</title>
@{
    var setting = ViewBag.setting as Domain.Setting;
}

<div class="x_panel">
    <div class="x_content">
        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Index")"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;">
            ویرایشِ بر چسب
        </h1>
        <br /><br />
        <p class="text text-danger">@ViewBag.Error</p>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <p>&nbsp;
                    </p>
                    @Html.EditorFor(model => model.TagName, new { htmlAttributes = new { placeholder = "نام برچسب", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TagName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <p>
                        <span class="ContentTitle"></span> کاراکتر باقی مانده.
                        <span data-html="true" data-toggle="tooltip" data-placement="left" class="glyphicon glyphicon-question-sign"></span>
                        <span>عنوان</span>
                    </p>

                  
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { id = "ContentTitle", @class = "form-control", placeholder = "عنوان " } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <p>
                        <span class="ContentDescr"></span> کاراکتر باقی مانده.
                        <span data-html="true" data-toggle="tooltip" data-placement="left" class="glyphicon glyphicon-question-sign"></span>
                        <span>توضیحات متا</span>
                    </p>
                    @Html.TextAreaFor(model => model.MetaDescription, htmlAttributes: new { id = "ContentDescr", @class = "form-control", rows = "4", placeholder = "توضیحات متای گوگل" })
                    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                </div>

                @{
                    CoreLib.ViewModel.Xml.XMLReader readXml = new CoreLib.ViewModel.Xml.XMLReader(setting.StaticContentDomain);
                    var languages = readXml.ListOfXLanguage();
                }
                @if (languages.Count == 1)
                {

                    @Html.HiddenFor(x => x.LanguageId)
                }
                else
                {
                    <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.LanguageId, "زبان ( وب سایت )", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ذخیره" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts{
    <script>
                $('#ContentTitle').simplyCountable({ counter: '.ContentTitle', maxCount: 100, safeClass: 'safe', overClass: 'over' });
                $('#ContentDescr').simplyCountable({ counter: '.ContentDescr', maxCount: 150, safeClass: 'safe', overClass: 'over' });
    </script>
 

}