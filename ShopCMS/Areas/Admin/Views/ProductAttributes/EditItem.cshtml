@model Domain.ProductAttributeItem
@{
    var ProductAttribute = ViewBag.ProductAttribute as Domain.ProductAttribute;
}
<title>ویرایش مقدار خصوصیت @ProductAttribute.Name </title>


<div class="x_panel">
    <div class="x_content">

        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Items",new {AttributeId=ProductAttribute.Id })"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;" class="box-title">
            ویرایش مقدار خصوصیت @ProductAttribute.Name

        </h1>
        <br /><br />
        <p class="text text-danger">@ViewBag.Error</p>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.message != null)
        {
            <p class="alert alert-danger">@ViewBag.message</p>
        }

        @Html.Hidden("AttributeId", ProductAttribute.Id);

        <div class="form-group has-feedback">
            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { placeholder = "مقدار", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
        </div>

        <div class="form-group has-feedback col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div>
                @Ajax.ActionLink("استفاده از فایل ها", "OpenAttachement", "FileManager", null, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "createView", OnBegin = "$('.loading').show();", OnSuccess = "$('.loading').hide();createMode('',1)", InsertionMode = InsertionMode.Replace }, htmlAttributes: new { @class = "btn btn-primary OpenFileManager", @style = "margin-bottom:0" })

                @Html.LabelFor(model => model.Descr, htmlAttributes: new { @class = "control-label", @style = "display:inline" })
            </div>
            <div id="createView"></div>
            @Html.TextAreaFor(model => model.Descr, htmlAttributes: new { placeholder = Html.DisplayNameFor(x => x.Descr), Id = "txt_Content", @class = "form-control elm1", rows = "5" })
            @Html.ValidationMessageFor(model => model.Descr, "", new { @class = "text-danger" })

        </div>


        <div class="clearfix"></div>
        <div class="form-group col-lg-4 col-md-4 col-sm-12 col-xs-12">
            <input type="submit" value="ویرایش" class="btn btn-success" />
        </div>
    </div>
        }


    </div>
</div>

@section Scripts{


    @Scripts.Render("~/bundles/Admin/FileManager/Js")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/tiny_mce_load.js"></script>

}