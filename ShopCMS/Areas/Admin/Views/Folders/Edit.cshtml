@model Domain.Folder
<title>ویرایش پوشه</title>
@{ 

    var setting = ViewBag.setting as Domain.Setting;
}



<div class="x_panel">
    <div class="x_content">
        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Index")"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;" class="box-title">
            <i class="flaticon-folder-filled-shape"></i> ویرایشِ پوشه
        </h1>
            <br /><br />
            <p class="text text-danger">@ViewBag.Error</p>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.FolderName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FolderName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FolderName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FolderID, "پوشه اصلی", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("FolderID", null, "--ندارد--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FolderID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @{
                        CoreLib.ViewModel.Xml.XMLReader readXml = new CoreLib.ViewModel.Xml.XMLReader(setting.StaticContentDomain);
                        var languages = readXml.ListOfXLanguage();
                    }
                    @if (languages.Count == 1)
                {

                        @Html.HiddenFor(x => x.LanguageId)
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.LanguageId, "زبان ( وب سایت )", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="ذخیره" class="btn btn-success" />
                        </div>
                    </div>
                </div>
                        }

</div>
</div>
