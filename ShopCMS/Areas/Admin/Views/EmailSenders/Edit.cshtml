@model Domain.EmailSender
<time> ویرایشِ @Model.Email</time>
@{
    var HelpModuleSection = ViewBag.HelpModuleSection as Domain.HelpModuleSection;
}

<div class="x_panel">
    <div class="x_content">
        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Index")"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;" class="box-title">
            <i class="flaticon-gears-configuration-tool"></i> ویرایشِ @Model.Email
        </h1>
            <br /><br />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        <div class="control-label col-md-3">
                            <span style="cursor:pointer" class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "ایمیل روی دامنه وب سایت").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "ایمیل روی دامنه وب سایت").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>
                            @Html.LabelFor(model => model.Email)
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-md-3">
                            <span style="cursor:pointer" class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "رمز عبور ایمیل").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "رمز عبور ایمیل").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>
                            @Html.LabelFor(model => model.Password)
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label col-md-3">
                            <span style="cursor:pointer" class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "میل سرور روی دامنه وب سایت").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "میل سرور روی دامنه وب سایت").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>
                            @Html.LabelFor(model => model.MailServer)
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.MailServer, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MailServer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="control-label col-md-3">
                            <span style="cursor:pointer" class="glyphicon glyphicon-question-sign" data-html="true" data-toggle="tooltip" data-placement="left" title="@(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "پورت میل سرور").Any()? Html.Raw(HelpModuleSection.HelpModuleSectionFields.Where(x=>x.Name== "پورت میل سرور").First().Data).ToHtmlString():Html.Raw("").ToHtmlString())"></span>
                            @Html.LabelFor(model => model.Port)
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.HiddenFor(x => x.SettingId)
                    @Html.Hidden("IsActive", "true")
                    @Html.Hidden("DisplaySort", "0")


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="ذخیره" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }

</div>
</div>
