@model Domain.ProductImage
@{
    var product = ViewBag.product as Domain.Product;
    var ProductPrice = ViewBag.ProductPrice as Domain.ProductPrice;
}
<title>درج تصویر برای تنوعِ @ProductPrice.Id</title>


<div class="x_panel">
    <div class="x_content">
        <div class="text-left"><a class="btn btn-success" href="@Url.Action("Images",new {id = ProductPrice.Id})"> بازگشت به لیست <span class="glyphicon glyphicon-chevron-left"></span></a></div>

        <h1 style="display:inline-block;font-size: 2em;" class="box-title">
            درج تصویر برای تنوعِ @ProductPrice.Id

        </h1>
        <br /><br />
        <p class="text text-danger">@ViewBag.Error</p>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()



            <div class="form-horizontal">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                @Html.Hidden("productId", product.Id)
                                @Html.Hidden("ProductPriceId", ProductPrice.Id)
                                @Html.Hidden("IsImage", true)


                <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">

                    <div id="createView"></div>
                        @Ajax.ActionLink("انتخاب یا آپلود تصویر", "OpenAttachement", "FileManager", null, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "createView", OnBegin = "$('.loading').show();", OnSuccess = "$('.loading').hide();createMode('',2)", InsertionMode = InsertionMode.Replace }, htmlAttributes: new { @class = "btn btn-primary OpenFileManager" })
                        <div id="AttachementContainer">
                            <img src="~/Content/Default/images/default-thumbnail.jpg" class="img-responsive" width="220" height="120" style="display:inline-block;width:220px;height:120px" />
                            @Html.EditorFor(model => model.AttachementId, new { htmlAttributes = new { @class = "form-control text-left Ltr", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.AttachementId, "", new { @class = "text-danger" })
                        </div>

                    </div>
                <div class="form-group has-feedback col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    @Html.CheckBox("IsMain", false, new { @class = "js-switch" }) @Html.LabelFor(m => m.IsMain)
                    <br />
                    @Html.TextAreaFor(model => model.Data,  new { @class = "form-control",rows="5",placeholder="توضیحات در صورت نیاز..." })
                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })




                </div>
                <div class="clearfix"></div>

                <div class="form-group col-lg-4 col-md-4 col-sm-12 col-xs-12">
                    <input type="submit" value="ایجاد" class="btn btn-success" />
                </div>
                <div class="clearfix"></div>
            </div>
        }

        @section Scripts{

            @Scripts.Render("~/bundles/Admin/FileManager/Js")

        }
    </div>
</div>